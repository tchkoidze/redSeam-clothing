/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegistrationRouteImport } from './routes/registration'
import { Route as OrderRouteImport } from './routes/order'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ListingRouteImport } from './routes/listing'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductProductIdRouteImport } from './routes/product/$productId'

const RegistrationRoute = RegistrationRouteImport.update({
  id: '/registration',
  path: '/registration',
  getParentRoute: () => rootRouteImport,
} as any)
const OrderRoute = OrderRouteImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingRoute = ListingRouteImport.update({
  id: '/listing',
  path: '/listing',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductProductIdRoute = ProductProductIdRouteImport.update({
  id: '/product/$productId',
  path: '/product/$productId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/listing': typeof ListingRoute
  '/login': typeof LoginRoute
  '/order': typeof OrderRoute
  '/registration': typeof RegistrationRoute
  '/product/$productId': typeof ProductProductIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/listing': typeof ListingRoute
  '/login': typeof LoginRoute
  '/order': typeof OrderRoute
  '/registration': typeof RegistrationRoute
  '/product/$productId': typeof ProductProductIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/listing': typeof ListingRoute
  '/login': typeof LoginRoute
  '/order': typeof OrderRoute
  '/registration': typeof RegistrationRoute
  '/product/$productId': typeof ProductProductIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/listing'
    | '/login'
    | '/order'
    | '/registration'
    | '/product/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/listing'
    | '/login'
    | '/order'
    | '/registration'
    | '/product/$productId'
  id:
    | '__root__'
    | '/'
    | '/listing'
    | '/login'
    | '/order'
    | '/registration'
    | '/product/$productId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ListingRoute: typeof ListingRoute
  LoginRoute: typeof LoginRoute
  OrderRoute: typeof OrderRoute
  RegistrationRoute: typeof RegistrationRoute
  ProductProductIdRoute: typeof ProductProductIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/registration': {
      id: '/registration'
      path: '/registration'
      fullPath: '/registration'
      preLoaderRoute: typeof RegistrationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/order': {
      id: '/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listing': {
      id: '/listing'
      path: '/listing'
      fullPath: '/listing'
      preLoaderRoute: typeof ListingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ListingRoute: ListingRoute,
  LoginRoute: LoginRoute,
  OrderRoute: OrderRoute,
  RegistrationRoute: RegistrationRoute,
  ProductProductIdRoute: ProductProductIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
